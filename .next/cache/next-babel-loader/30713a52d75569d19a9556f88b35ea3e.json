{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment, Component } from 'react';\nimport { Marker, Circle } from 'react-google-maps'; // The UserMarker component stores the position of the current active user in the position property of the component’s state.\n\nclass UserMarker extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      person: {\n        id = null,\n        position = null\n      },\n      channel = null\n    } = this.props;\n    this.id = id;\n    this.channel = channel;\n    this.state = {\n      position\n    };\n  } // we bind to the transit event on the Pusher channel, and update the state with the new position of the user. \n  // We only update the state when the current user’s position changes.\n\n\n  componentDidMount() {\n    this.channel && this.channel.bind('transit', ({\n      person = {}\n    }) => {\n      const {\n        id,\n        position\n      } = person;\n      id === this.id && this.setState({\n        position\n      });\n    });\n  } // we render a red marker icon for the currently active user by setting the MARKER_ICON constant as the marker icon URL.\n  // We also render a Circle region using the user’s current position as center and the radius received as prop.\n\n\n  render() {\n    const {\n      radius\n    } = this.props;\n    const {\n      position\n    } = this.state;\n    const regionOptions = {\n      fillOpacity: 0.1,\n      strokeWidth: 1,\n      strokeOpacity: 0.2\n    };\n    const MARKER_SIZE = new google.maps.Size(50, 70);\n    const MARKER_ICON = 'https://i.imgur.com/Rhv5xQh.png';\n    return __jsx(Fragment, null, __jsx(Marker, {\n      position: position,\n      title: \"You\",\n      options: {\n        icon: {\n          url: MARKER_ICON,\n          scaledSize: MARKER_SIZE\n        }\n      }\n    }), __jsx(Circle, {\n      center: position,\n      radius: radius,\n      options: regionOptions\n    }));\n  }\n\n}\n\n;\nexport default UserMarker;","map":null,"metadata":{},"sourceType":"module"}