{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport Layout from '../components/Layout';\nimport ChoosePersona from '../components/ChoosePersona';\nimport Map from '../components/Map';\nimport NearbyFriends from '../components/NearbyFriends';\n\nvar IndexPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IndexPage, _Component);\n\n  function IndexPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, IndexPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(IndexPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      id: null,\n      people: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"endConnection\", function () {\n      _this.pusher.disconnect();\n\n      axios.post(\"/offline/\".concat(_this.state.id));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"personaSelected\", function (id) {\n      _this.setState({\n        id: id\n      });\n\n      axios.post(\"/online/\".concat(id));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"regionFiltered\", function (people) {\n      return _this.nearby.updatePeople(people);\n    });\n\n    return _this;\n  }\n\n  _createClass(IndexPage, [{\n    key: \"componentWillMount\",\n    // This happens before mounting occurs and called before render\n    value: function componentWillMount() {\n      this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n        cluster: process.env.PUSHER_APP_CLUSTER,\n        encrypted: true\n      });\n      this.channel = this.pusher.subscribe('map-geofencing');\n    } // fetch the people collection from the server by making a GET HTTP request using axios to the /people endpoint.\n    // We then update the state with the people collection gotten from the response.\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('/people').then(function (_ref) {\n        var data = _ref.data;\n        var _data$people = data.people,\n            people = _data$people === void 0 ? [] : _data$people;\n\n        _this2.setState({\n          people: people\n        });\n      });\n      window.onbeforeunload = this.endConnection;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.endConnection();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          id = _this$state.id,\n          people = _this$state.people;\n      var person = people.find(function (person) {\n        return person.id === id;\n      }) || {};\n      var peopleOffline = people.filter(function (person) {\n        return !person.online;\n      });\n      return __jsx(Layout, {\n        pageTitle: \"Realtime Geofencing\"\n      }, __jsx(\"main\", {\n        className: \"container-fluid position-absolute h-100 bg-light\"\n      }, id ? __jsx(\"div\", {\n        className: \"row position-absolute w-100 h-100\"\n      }, __jsx(\"section\", {\n        className: \"col-md-9 px-0 border-right border-gray position-relative h-100\"\n      }, __jsx(Map, {\n        person: person,\n        radius: 1000,\n        people: people,\n        channel: this.channel,\n        onRegionFiltered: this.regionFiltered\n      })), __jsx(\"section\", {\n        className: \"col-md-3 position-relative d-flex flex-wrap h-100 align-items-start align-content-between bg-white px-0\"\n      }, __jsx(NearbyFriends, {\n        ref: function ref(elem) {\n          return _this3.nearby = elem;\n        },\n        person: person\n      }))) : __jsx(ChoosePersona, {\n        count: 5,\n        people: peopleOffline,\n        onSelected: this.personaSelected\n      })));\n    }\n  }]);\n\n  return IndexPage;\n}(Component);\n\n;\nexport default (function () {\n  return __jsx(IndexPage, null);\n});","map":{"version":3,"sources":["/Users/fatimaaltaf/lighthouse/google_api/realtime-geofencing-app/pages/index.js"],"names":["React","Component","Fragment","axios","Pusher","Layout","ChoosePersona","Map","NearbyFriends","IndexPage","id","people","pusher","disconnect","post","state","setState","nearby","updatePeople","process","env","PUSHER_APP_KEY","cluster","PUSHER_APP_CLUSTER","encrypted","channel","subscribe","get","then","data","window","onbeforeunload","endConnection","person","find","peopleOffline","filter","online","regionFiltered","elem","personaSelected"],"mappings":"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","sourcesContent":["\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport Layout from '../components/Layout';\nimport ChoosePersona from '../components/ChoosePersona';\nimport Map from '../components/Map';\nimport NearbyFriends from '../components/NearbyFriends';\n\nclass IndexPage extends Component {\n\n  // Initialize state with two props\n    //id = UUID to identify current user\n    // people = array of people with their respective coordinates\n\n  state = { id: null, people: [] }\n\n  // endConnection() method terminates the current Pusher connection and \n  // also sends an /offline request to the server for the current user. \n  // The endConnection() method is called before the component is unmounted or before the page is unloaded.\n  endConnection = () => {\n    this.pusher.disconnect();\n    axios.post(`/offline/${this.state.id}`);\n  }\n\n  // This happens before mounting occurs and called before render\n  componentWillMount() {\n    this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n      cluster: process.env.PUSHER_APP_CLUSTER,\n      encrypted: true\n    });\n\n    this.channel = this.pusher.subscribe('map-geofencing');\n  }\n\n  // fetch the people collection from the server by making a GET HTTP request using axios to the /people endpoint.\n  // We then update the state with the people collection gotten from the response.\n  componentDidMount() {\n    axios.get('/people').then(({ data }) => {\n      const { people = [] } = data;\n      this.setState({ people });\n    });\n\n    window.onbeforeunload = this.endConnection;\n  }\n\n  componentWillUnmount() {\n    this.endConnection();\n  }\n\n  personaSelected = id => {\n    this.setState({ id });\n    axios.post(`/online/${id}`);\n  }\n\n  regionFiltered = people => this.nearby.updatePeople(people)\n\n  render() {\n\n    const { id, people } = this.state;\n    const person = people.find(person => person.id === id) || {};\n    const peopleOffline = people.filter(person => !person.online);\n\n    return (\n      <Layout pageTitle=\"Realtime Geofencing\">\n        <main className=\"container-fluid position-absolute h-100 bg-light\">\n          {\n            id ? <div className=\"row position-absolute w-100 h-100\">\n\n              <section className=\"col-md-9 px-0 border-right border-gray position-relative h-100\">\n                <Map person={person} radius={1000} people={people} channel={this.channel} onRegionFiltered={this.regionFiltered} />\n              </section>\n\n              <section className=\"col-md-3 position-relative d-flex flex-wrap h-100 align-items-start align-content-between bg-white px-0\">\n                <NearbyFriends ref={elem => this.nearby = elem} person={person} />\n              </section>\n\n            </div>\n            : <ChoosePersona count={5} people={peopleOffline} onSelected={this.personaSelected} />\n          }\n        </main>\n      </Layout>\n    );\n  }\n};\n\nexport default () => <IndexPage />"]},"metadata":{},"sourceType":"module"}