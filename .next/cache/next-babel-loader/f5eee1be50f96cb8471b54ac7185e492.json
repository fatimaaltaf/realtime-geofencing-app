{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport Layout from '../components/Layout';\nimport ChoosePersona from '../components/ChoosePersona';\nimport Map from '../components/Map';\nimport NearbyFriends from '../components/NearbyFriends';\n\nclass IndexPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      id: null,\n      people: []\n    });\n\n    _defineProperty(this, \"endConnection\", () => {\n      this.pusher.disconnect();\n      axios.post(`/offline/${this.state.id}`);\n    });\n\n    _defineProperty(this, \"personaSelected\", id => {\n      this.setState({\n        id\n      });\n      axios.post(`/online/${id}`);\n    });\n\n    _defineProperty(this, \"regionFiltered\", people => this.nearby.updatePeople(people));\n  }\n\n  // This happens before mounting occurs and called before render\n  componentWillMount() {\n    this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n      cluster: process.env.PUSHER_APP_CLUSTER,\n      encrypted: true\n    });\n    this.channel = this.pusher.subscribe('map-geofencing');\n  } // fetch the people collection from the server by making a GET HTTP request using axios to the /people endpoint.\n  // We then update the state with the people collection gotten from the response.\n\n\n  componentDidMount() {\n    axios.get('/people').then(({\n      data\n    }) => {\n      const {\n        people = []\n      } = data;\n      this.setState({\n        people\n      });\n    });\n    window.onbeforeunload = this.endConnection;\n  }\n\n  componentWillUnmount() {\n    this.endConnection();\n  }\n\n  render() {\n    const {\n      id,\n      people\n    } = this.state;\n    const person = people.find(person => person.id === id) || {};\n    const peopleOffline = people.filter(person => !person.online);\n    return __jsx(Layout, {\n      pageTitle: \"Realtime Geofencing\"\n    }, __jsx(\"main\", {\n      className: \"container-fluid position-absolute h-100 bg-light\"\n    }, id ? __jsx(\"div\", {\n      className: \"row position-absolute w-100 h-100\"\n    }, __jsx(\"section\", {\n      className: \"col-md-9 px-0 border-right border-gray position-relative h-100\"\n    }, __jsx(Map, {\n      person: person,\n      radius: 1000,\n      people: people,\n      channel: this.channel,\n      onRegionFiltered: this.regionFiltered\n    })), __jsx(\"section\", {\n      className: \"col-md-3 position-relative d-flex flex-wrap h-100 align-items-start align-content-between bg-white px-0\"\n    }, __jsx(NearbyFriends, {\n      ref: elem => this.nearby = elem,\n      person: person\n    }))) : __jsx(ChoosePersona, {\n      count: 5,\n      people: peopleOffline,\n      onSelected: this.personaSelected\n    })));\n  }\n\n}\n\n;\nexport default (() => __jsx(IndexPage, null));","map":null,"metadata":{},"sourceType":"module"}