{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/ChoosePersona.js","webpack:///./components/Layout.js","webpack:///./components/Map.js","webpack:///./components/MapContainer.js","webpack:///./components/NearbyFriends.js","webpack:///./components/PersonMarker.js","webpack:///./components/UserMarker.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/assign.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-properties.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptors.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js","webpack:///./pages/index.js","webpack:///external \"axios\"","webpack:///external \"core-js/library/fn/object/assign\"","webpack:///external \"core-js/library/fn/object/define-properties\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptors\"","webpack:///external \"core-js/library/fn/object/get-own-property-symbols\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"next/head\"","webpack:///external \"pusher-js\"","webpack:///external \"react\"","webpack:///external \"react-google-maps\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React from 'react';\n\n  // number of random personas to pick from the people collection prop.\n  // It then uses .map() to create an array of <span> elements for each randomly picked persona and returns the array.\n  const ChoosePersona = props => {\n\n    const { people = [], count = 3, onSelected = f => f } = props;\n\n    const nameBadgeStyles = {\n      fontSize: '0.8rem',\n      height: 40,\n      borderRadius: 20,\n      cursor: 'pointer'\n    };\n\n    const choosePersona = id => evt => onSelected(id);\n\n    const randomPeople = count => people => {\n\n      const selected = [];\n      let i = 0;\n\n      count = Math.max(0, Math.min(count, people.length));\n\n      while (i < count) {\n        const index = Math.floor(Math.random() * people.length);\n        if (selected.includes(index)) continue;\n        ++i && selected.push(index);\n      }\n\n      return selected.map(index => {\n        const { id, name } = people[index];\n        const className = 'd-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mx-1 my-2';\n\n        return <span key={index} className={className} style={nameBadgeStyles} title={name} onClick={ choosePersona(id) }>{name}</span>\n      });\n\n    };\n\n    return (\n      <div className=\"w-100 h-100 px-3 pb-5 d-flex flex-wrap align-items-center align-content-center justify-content-center\">\n        <span className=\"h3 text-dark text-center py-3 w-100 font-weight-bold\">Choose your Persona</span>\n        { randomPeople(count)(people) }\n      </div>\n    );\n  };\n\n  export default ChoosePersona;","//We are simply using the next/head component to add meta information to the <head> of our pages. \n// We have also added a link to the Bootstrap CDN file to add some default styling to our app.\n// We are also setting the page title dynamically from props and rendering the page contents using {props.children}.\n\nimport React, { Fragment } from 'react';\nimport Head from 'next/head';\n\nconst Layout = props => (\n  <Fragment>\n    <Head>\n      <meta charSet=\"utf-8\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n      <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossOrigin=\"anonymous\" />\n      <title>{props.pageTitle || 'Realtime Geofencing'}</title>\n    </Head>\n    {props.children}\n  </Fragment>\n);\n\nexport default Layout;","import React, { Fragment, Component } from 'react';\n    import MapContainer from './MapContainer';\n\n    const API_KEY = process.env.GMAPS_API_KEY;\n    const MAP_URL = `https://maps.googleapis.com/maps/api/js?key=${API_KEY}&v=3.exp&libraries=geometry`;\n\n    class Map extends Component {\n\n      render() {\n        const containerStyles = {\n          height: '100%',\n          width: '100%',\n          position: 'relative'\n        };\n\n        // Form the MAP_URL using the API_KEY of the GoogleMaps app we created earlier for our application. \n        // We also render the MapContainer passing in the MAP_URL.\n        // The MapContainer component contains the map and other visual elements such as markers and shape regions\n\n        return <MapContainer\n          googleMapURL={MAP_URL}\n          loadingElement={<div style={containerStyles} />}\n          containerElement={<div style={containerStyles} />}\n          mapElement={<div style={containerStyles} />}\n          {...this.props}\n        />\n      }\n\n    };\n\n    export default Map;","import axios from 'axios';\nimport React, { Fragment, Component } from 'react';\nimport { withGoogleMap, withScriptjs, GoogleMap } from 'react-google-maps';\n\nimport UserMarker from './UserMarker';\nimport PersonMarker from './PersonMarker';\n\nclass MapContainer extends Component {\n\n  //withinRegion() method enables us to determine if a point is within a defined circular region.\n  // It takes the center and radius of the region as its arguments, and returns a function. \n  // The returned function takes a point as argument and returns if the point is in the region.\n\n  withinRegion = (position, radius) => {\n    const to = new google.maps.LatLng(position.lat, position.lng);\n    const distance = google.maps.geometry.spherical.computeDistanceBetween;\n    return point => {\n      const from = new google.maps.LatLng(point.lat, point.lng);\n      return distance(from, to) <= radius;\n    }\n  }\n\n  analyzeRegion = (position, radius) => people => {\n    const { onRegionFiltered = f => f } = this.props;\n    const withinRegion = this.withinRegion(position, radius);\n\n    const mappedPeople = people.map(person => {\n      const { position } = person || {};\n      const within = withinRegion(position);\n      return { ...person, within };\n    });\n\n    onRegionFiltered(mappedPeople);\n  }\n\n  componentDidMount() {\n\n    const { person: { id, position }, radius, people = [], channel = null } = this.props;\n    const mapContext = this.map.context['__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED'];\n    const setMapCenter = mapContext.setCenter.bind(mapContext);\n\n    let { lat, lng } = position;\n\n    channel && channel.bind('transit', ({ person = {}, people }) => {\n      const { id: $id, position: $position } = person;\n      const isUser = id === $id;\n      const center = isUser ? $position : position;\n\n      isUser && setMapCenter(center);\n      this.analyzeRegion(center, radius)(people);\n    });\n\n    this.positionUpdate = setInterval(() => {\n      lat = lat + Math.random() * 0.001;\n      lng = lng + Math.random() * 0.001;\n\n      axios.post(`/transit/${id}`, { lat, lng });\n    }, 10000);\n\n    this.analyzeRegion(position, radius)(people);\n\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.positionUpdate);\n  }\n\n  // Here we render the GoogleMap component passing the position of the current user as the center prop. \n  // We loop through the people collection received by the MapComponent and render different types of makers based on the person.\n\n  render() {\n    const { person: { id, position }, radius, people, channel } = this.props;\n\n    // ref will give us access to the underlying google.maps.Map instance, which we will need later to update the map properties.\n\n    // We use UserMarker for the currently active user and the PersonMarker for other people.\n    // We also pass the radius, person and channel props to the marker components. \n    // The channel prop contains a reference to the current Pusher channel subscription.\n\n    // For the PersonMarker component, we pass in the currently active user to the user prop.\n    // We also pass in an inverted version of the withinRegion() method to the withinRegion prop.\n\n    return (\n      <GoogleMap ref={elem => this.map = elem} zoom={15} center={position}>\n        <Fragment>\n          { people.map((person, index) => {\n\n            const props = { key: index, radius, person, channel };\n            const withinRegion = point => (position, radius) => this.withinRegion(position, radius)(point);\n\n            return (person.id === id)\n              ? <UserMarker {...props} />\n              : <PersonMarker user={this.props.person} withinRegion={withinRegion} {...props} />\n\n          }) }\n        </Fragment>\n      </GoogleMap>\n    );\n  }\n\n};\n\nexport default withScriptjs(withGoogleMap(MapContainer));","import React, { Component, Fragment } from 'react';\n\nconst BLACK_MARKER = 'https://i.imgur.com/8dOrls4.png?2';\nconst GREEN_MARKER = 'https://i.imgur.com/9v6uW8U.png';\n\nclass NearbyFriends extends Component {\n\n  state = { people: [] }\n\n  updatePeople = people => this.setState({ people })\n\n  render() {\n    const { people } = this.state;\n    const { person: { name, id } } = this.props;\n\n    const nameBadgeStyles = {\n      fontSize: '0.8rem',\n      height: 40,\n      borderRadius: 20,\n      cursor: 'pointer'\n    };\n\n    const showPeople = (filterFn, marker) => {\n      return <Fragment>\n        { people.filter(filterFn).map((person, index) => {\n\n          if (person.id === id) return null;\n\n          return (\n            <div key={index} className=\"d-flex border-bottom border-gray w-100 px-4 py-3 font-weight-bold text-secondary align-items-center\">\n\n              <div className=\"pl-2\" style={{ width: 30, height: 30 }}>\n                <img src={marker} className=\"img-fluid\" alt=\"marker\" />\n              </div>\n\n              <span className=\"pl-3\">{person.name}</span>\n\n            </div>\n          );\n\n        }) }\n      </Fragment>\n    };\n\n    return id && <Fragment>\n\n      <div className=\"border-bottom border-gray w-100 px-2 d-flex align-items-center bg-white justify-content-between\" style={{ height: 90 }}>\n        <span className=\"h4 text-dark mb-0 mx-4 font-weight-bold\">Nearby Friends</span>\n        <span className=\"d-flex align-items-center text-center text-white bg-primary font-weight-bold py-2 px-4 mx-4\" style={nameBadgeStyles} title={name}>{name}</span>\n      </div>\n\n      <div className=\"w-100 d-flex flex-wrap align-items-start align-content-start position-relative\" style={{ height: 'calc(100% - 90px)', overflowY: 'auto' }}>\n        { showPeople(person => person.within, GREEN_MARKER) }\n        { showPeople(person => !person.within, BLACK_MARKER) }\n      </div>\n\n    </Fragment>\n  }\n};\n\nexport default NearbyFriends;","import React, { Component } from 'react';\n    import { Marker } from 'react-google-maps';\n\n    const BLACK_MARKER = 'https://i.imgur.com/8dOrls4.png?2';\n    const GREEN_MARKER = 'https://i.imgur.com/9v6uW8U.png';\n\n    // The PersonMarker component stores the position of the person in the position property of the component’s state \n    // and the position of the current active user in the userPosition property of the state.\n    class PersonMarker extends Component {\n\n      constructor(props) {\n        super(props);\n\n        const {\n          user: { id: userID, position: userPosition },\n          person: { id = null, position = null },\n          channel = null\n        } = this.props;\n\n        this.id = id;\n        this.userID = userID;\n        this.channel = channel;\n\n        this.state = { position, userPosition };\n      }\n\n      // we bind to the transit event on the Pusher channel, and update the state with the new position of the person or currently active user. \n      // We update the state’s position when the person’s position changes, and the userPosition when the currently active user’s position changes.\n      componentDidMount() {\n        this.channel && this.channel.bind('transit', ({ person = {} }) => {\n          const { id, position } = person;\n          (id === this.id) && this.setState({ position });\n          (id === this.userID) && this.setState({ userPosition: position });\n        });\n      }\n\n      // withinRegion() method received as prop to check if the person is within the defined circular region of the currently active user. \n      // We then conditionally render a green marker icon if the person is within the region, otherwise, we render a black icon.\n      render() {\n        const { position, userPosition } = this.state;\n        const { person: { name }, radius, withinRegion = f => f } = this.props;\n\n        const within = !!(withinRegion(position)(userPosition, radius));\n\n        const MARKER_SIZE = new google.maps.Size(25, 35);\n        const MARKER_ICON = within ? GREEN_MARKER : BLACK_MARKER;\n\n        return <Marker position={position} title={name} options={{ icon: { url: MARKER_ICON, scaledSize: MARKER_SIZE } }} />\n      }\n\n    };\n\n    export default PersonMarker;","import React, { Fragment, Component } from 'react';\nimport { Marker, Circle } from 'react-google-maps';\n\n// The UserMarker component stores the position of the current active user in the position property of the component’s state.\n\n  class UserMarker extends Component {\n\n    constructor(props) {\n      super(props);\n      const { person: { id = null, position = null }, channel = null } = this.props;\n\n      this.id = id;\n      this.channel = channel;\n      this.state = { position };\n    }\n\n    // we bind to the transit event on the Pusher channel, and update the state with the new position of the user. \n    // We only update the state when the current user’s position changes.\n    componentDidMount() {\n      this.channel && this.channel.bind('transit', ({ person = {} }) => {\n        const { id, position } = person;\n        (id === this.id) && this.setState({ position });\n      });\n    }\n\n    // we render a red marker icon for the currently active user by setting the MARKER_ICON constant as the marker icon URL.\n    // We also render a Circle region using the user’s current position as center and the radius received as prop.\n    render() {\n\n      const { radius } = this.props;\n      const { position } = this.state;\n      const regionOptions = { fillOpacity: 0.1, strokeWidth: 1, strokeOpacity: 0.2 };\n\n      const MARKER_SIZE = new google.maps.Size(50, 70);\n      const MARKER_ICON = 'https://i.imgur.com/Rhv5xQh.png';\n\n      return <Fragment>\n        <Marker position={position} title=\"You\" options={{ icon: { url: MARKER_ICON, scaledSize: MARKER_SIZE } }} />\n        <Circle center={position} radius={radius} options={regionOptions} />\n      </Fragment>\n\n    }\n  };\n\n  export default UserMarker;","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$assign from \"../../core-js/object/assign\";\nexport default function _extends() {\n  _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport Layout from '../components/Layout';\nimport ChoosePersona from '../components/ChoosePersona';\nimport Map from '../components/Map';\nimport NearbyFriends from '../components/NearbyFriends';\n\nclass IndexPage extends Component {\n\n  // Initialize state with two props\n    //id = UUID to identify current user\n    // people = array of people with their respective coordinates\n\n  state = { id: null, people: [] }\n\n  // endConnection() method terminates the current Pusher connection and \n  // also sends an /offline request to the server for the current user. \n  // The endConnection() method is called before the component is unmounted or before the page is unloaded.\n  endConnection = () => {\n    this.pusher.disconnect();\n    axios.post(`/offline/${this.state.id}`);\n  }\n\n  // This happens before mounting occurs and called before render\n  componentWillMount() {\n    this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n      cluster: process.env.PUSHER_APP_CLUSTER,\n      encrypted: true\n    });\n\n    this.channel = this.pusher.subscribe('map-geofencing');\n  }\n\n  // fetch the people collection from the server by making a GET HTTP request using axios to the /people endpoint.\n  // We then update the state with the people collection gotten from the response.\n  componentDidMount() {\n    axios.get('/people').then(({ data }) => {\n      const { people = [] } = data;\n      this.setState({ people });\n    });\n\n    window.onbeforeunload = this.endConnection;\n  }\n\n  componentWillUnmount() {\n    this.endConnection();\n  }\n\n  personaSelected = id => {\n    this.setState({ id });\n    axios.post(`/online/${id}`);\n  }\n\n  regionFiltered = people => this.nearby.updatePeople(people)\n\n  render() {\n\n    const { id, people } = this.state;\n    const person = people.find(person => person.id === id) || {};\n    const peopleOffline = people.filter(person => !person.online);\n\n    return (\n      <Layout pageTitle=\"Realtime Geofencing\">\n        <main className=\"container-fluid position-absolute h-100 bg-light\">\n          {\n            id ? <div className=\"row position-absolute w-100 h-100\">\n\n              <section className=\"col-md-9 px-0 border-right border-gray position-relative h-100\">\n                <Map person={person} radius={1000} people={people} channel={this.channel} onRegionFiltered={this.regionFiltered} />\n              </section>\n\n              <section className=\"col-md-3 position-relative d-flex flex-wrap h-100 align-items-start align-content-between bg-white px-0\">\n                <NearbyFriends ref={elem => this.nearby = elem} person={person} />\n              </section>\n\n            </div>\n            : <ChoosePersona count={5} people={peopleOffline} onSelected={this.personaSelected} />\n          }\n        </main>\n      </Layout>\n    );\n  }\n};\n\nexport default () => <IndexPage />","module.exports = require(\"axios\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"next/head\");","module.exports = require(\"pusher-js\");","module.exports = require(\"react\");","module.exports = require(\"react-google-maps\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxFA;AAGA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AAOA;AACA;AArBA;AACA;AAqBA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AAAA;AAAA;AACA;AA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","sourceRoot":""}